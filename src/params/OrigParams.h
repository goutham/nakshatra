#ifndef OrigParams_h
#define OrigParams_h

#include "std_eval_params.h"
#include <array>

inline StdEvalParams<int> OrigParams() {
  static constexpr StdEvalParams<int> int_params{
      .pv_mgame = {0, 20000, 1182, 546, 422, 405, 96},
      .pv_egame = {0, 20000, 998, 553, 316, 304, 130},
      .pst_mgame =
          {
              std::array<int, 64>{0},
              std::array<int, 64>{
                  -88, 226, 196, 106,  -136, -68, 67,  50,  146, 62,  35,
                  173, 56,  64,  -23,  -168, 71,  90,  99,  13,  66,  117,
                  136, -15, -4,  -41,  14,   -38, -13, -27, 3,   -59, -62,
                  23,  -47, -97, -109, -66,  -63, -79, 43,  5,   -30, -66,
                  -71, -49, -6,  -28,  35,   27,  -4,  -72, -51, -18, 35,
                  37,  5,   67,  29,   -69,  18,  -29, 53,  49,
              },

              std::array<int, 64>{
                  -12, -3,  5,   11,  131, 149, 56,  45,  -18, -46, 3,
                  -13, -24, 59,  37,  64,  -22, -16, 4,   1,   34,  62,
                  65,  70,  -44, -35, -17, -16, -14, 9,   -12, -3,  -6,
                  -34, -8,  -12, -5,  -5,  2,   0,   -16, 5,   -9,  -2,
                  -5,  3,   17,  -4,  -39, -10, 16,  3,   10,  24,  -14,
                  2,   -2,  -20, -10, 16,  -17, -32, -33, -69,
              },

              std::array<int, 64>{
                  43,  65,  34,  100, 87,  -18, 8,   29,  31,  33,  85,
                  90,  114, 105, 23,  48,  -20, 18,  18,  39,  16,  68,
                  95,  16,  -32, -15, 1,   21,  17,  50,  -2,  -35, -50,
                  -37, -14, -8,  0,   -10, 11,  -30, -56, -30, -19, -26,
                  -4,  -6,  -3,  -45, -55, -20, -28, -18, -10, 4,   -15,
                  -78, -27, -21, -4,  7,   9,   -5,  -37, -27,
              },

              std::array<int, 64>{
                  -45, 4,  -98, -47, -60, -18, -14, 16,  -26, 21, -12, -23, 52,
                  54,  27, -47, -12, 47,  51,  58,  44,  75,  31, -2,  3,   16,
                  20,  61, 48,  51,  14,  5,   -4,  19,  19,  32, 40,  20,  21,
                  9,   7,  18,  23,  23,  19,  36,  23,  12,  4,  23,  19,  5,
                  14,  31, 44,  9,   -33, 1,   -9,  -19, -14, -8, -42, -24,
              },

              std::array<int, 64>{
                  -213, -94,  -63, -82, 70,  -123, -28, -160, -107, -58, 66,
                  15,   18,   61,  1,   -5,  -74,  68,  39,   68,   102, 142,
                  78,   32,   -20, 12,  9,   52,   33,  74,   9,    12,  -24,
                  -9,   7,    4,   22,  15,  5,    -21, -33,  -24,  6,   4,
                  13,   10,   15,  -26, -48, -80,  -25, -12,  -11,  11,  -34,
                  -27,  -148, -32, -76, -54, -27,  -39, -28,  -27,
              },

              std::array<int, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   99,  161, 95,
                  155, 96,  154, 39,  -35, -22, -1,  24,  36,  76,  69,
                  23,  -26, -30, 9,   3,   19,  23,  12,  16,  -33, -44,
                  -10, -11, 10,  15,  7,   9,   -35, -42, -11, -10, -17,
                  0,   2,   35,  -22, -53, -8,  -29, -33, -21, 25,  41,
                  -32, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
      .pst_egame =
          {
              std::array<int, 64>{0},
              std::array<int, 64>{
                  -63, -76, -56, -53, 12,  19,  -2,  -24, -48, 3,  5,
                  -24, 4,   29,  23,  41,  -8,  3,   6,   10,  2,  27,
                  23,  11,  -13, 29,  18,  32,  24,  39,  24,  7,  -23,
                  -13, 26,  40,  46,  31,  20,  -4,  -37, -10, 13, 29,
                  34,  24,  6,   -7,  -45, -22, 3,   19,  20,  7,  -15,
                  -31, -69, -57, -32, -8,  -40, -13, -43, -70,
              },

              std::array<int, 64>{
                  -17, 35,  48,  43,  -18, -44, -6,  34,  -5,  37,  47,
                  73,  88,  32,  33,  0,   -5,  18,  18,  63,  62,  46,
                  31,  -4,  31,  48,  41,  61,  92,  64,  87,  56,  -21,
                  48,  32,  67,  45,  52,  59,  26,  -8,  -30, 25,  17,
                  23,  29,  13,  27,  -17, -19, -32, -10, -7,  -24, -24,
                  -33, -28, -21, -15, -54, -2,  -22, -1,  -27,
              },

              std::array<int, 64>{
                  20, 11, 26, 9,  10, 32, 23, 15, 17, 22,  10, 7,   -10,
                  -5, 20, 8,  24, 17, 19, 11, 13, -3, -11, 4,  21,  15,
                  27, 12, 13, 4,  6,  22, 17, 21, 21, 19,  10, 5,   -2,
                  2,  13, 13, 8,  14, 3,  2,  -2, -1, 9,   3,  16,  19,
                  4,  0,  0,  14, 6,  15, 16, 14, 8,  5,   17, -12,
              },

              std::array<int, 64>{
                  -12, -27, -2,  -4,  2,   -10, -12, -29, -8,  -6,  5,
                  -10, -10, -10, -6,  -13, 1,   -14, -1,  -7,  -4,  -1,
                  2,   2,   -4,  6,   14,  9,   16,  7,   0,   4,   -5,
                  0,   13,  20,  10,  9,   -5,  -12, -16, -5,  8,   10,
                  14,  -1,  -7,  -16, -14, -23, -9,  -2,  2,   -13, -19,
                  -31, -24, -11, -29, -4,  -8,  -22, -6,  -17,
              },

              std::array<int, 64>{
                  -53, -51, -8,  -26, -43, -24, -75, -104, -31, -11, -34,
                  -9,  -17, -35, -33, -67, -31, -34, 1,    2,   -18, -24,
                  -33, -55, -23, -3,  19,  16,  18,  3,    -3,  -23, -25,
                  -14, 13,  26,  12,  12,  6,   -24, -36,  -5,  -10, 9,
                  7,   -9,  -31, -32, -47, -20, -17, -11,  -11, -31, -26,
                  -63, -32, -66, -26, -20, -33, -27, -63,  -91,
              },

              std::array<int, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   174, 162, 146,
                  109, 134, 114, 165, 195, 87,  93,  74,  48,  30,  28,
                  69,  74,  16,  1,   -11, -22, -32, -22, -10, -4,  -5,
                  -13, -28, -35, -37, -39, -25, -26, -15, -16, -34, -20,
                  -27, -34, -33, -34, -2,  -15, -13, -13, -12, -29, -29,
                  -33, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
  };
  return int_params;
}

/*
Score of tuned (OrigParamsStep2000) vs overfit (OrigParamsStep41250): 1503 - 1787 - 1113  [0.468] 4403
Elo difference: -22.4 +/- 8.9, LOS: 0.0 %, DrawRatio: 25.3 %
constexpr double kMultiplier = 1.0 / 113.6;
constexpr double learning_rate = 10.0;
constexpr int batch_size = 1024;
overfit = OrigParamsStep41250
tuned = OrigParamsStep2000
Rank Name                          Elo     +/-   Games    Wins  Losses   Draws   Points   Score    Draw   White   Black
   1 overfit                        33      14    1665     696     539     430    911.0   54.7%   25.8%   53.1%   56.4%
   2 tuned                           9      14    1664     643     599     422    854.0   51.3%   25.4%   50.2%   52.5%
   3 pretuned                      -42      15    1665     541     742     382    732.0   44.0%   22.9%   42.9%   45.0%
*/
inline StdEvalParams<double> OrigParamsStep41250() {
  static constexpr StdEvalParams<double> params{
      .pv_mgame =
          {
              0,
              20000,
              1187,
              552,
              427,
              408,
              102,
          },
      .pv_egame =
          {
              0,
              20000,
              1011,
              559,
              320,
              305,
              115,
          },
      .pst_mgame =
          {
              std::array<double, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<double, 64>{
                  -87, 224, 193, 104,  -134, -65, 65,  47,  146, 61,  33,
                  171, 56,  62,  -22,  -165, 71,  87,  99,  13,  64,  118,
                  133, -13, -3,  -38,  15,   -36, -14, -25, 1,   -58, -61,
                  24,  -46, -95, -107, -66,  -61, -77, 40,  5,   -26, -64,
                  -66, -49, -3,  -24,  33,   31,  -5,  -71, -51, -19, 28,
                  37,  1,   62,  29,   -67,  16,  -30, 51,  49,
              },
              std::array<double, 64>{
                  -14, -3,  4,  10,  130, 148, 58, 44,  -24, -46, -3,  -10, -24,
                  59,  35,  60, -16, -14, 7,   2,  33,  63,  55,  68,  -40, -31,
                  -17, -17, -9, 10,  -8,  -3,  -7, -33, -9,  -10, -5,  -1,  0,
                  0,   -17, 7,  -10, 0,   -5,  4,  15,  1,   -37, -10, 16,  2,
                  11,  18,  -5, 2,   -2,  -16, -9, 14,  -17, -32, -35, -64,
              },
              std::array<double, 64>{
                  41,  64,  32,  98,  87,  -16, 7,   29,  34,  36,  84,
                  87,  111, 104, 23,  50,  -17, 18,  23,  37,  13,  64,
                  89,  14,  -30, -13, 5,   22,  16,  44,  -1,  -30, -48,
                  -33, -15, -9,  -1,  -8,  9,   -29, -58, -31, -20, -24,
                  -3,  -5,  -6,  -38, -56, -18, -23, -15, -5,  6,   -11,
                  -83, -28, -19, -4,  6,   9,   -7,  -39, -29,
              },
              std::array<double, 64>{
                  -42, 4,  -100, -50, -56, -20, -11, 13,  -26, 19, -16, -22, 50,
                  55,  26, -49,  -12, 41,  49,  48,  41,  72,  36, 3,   0,   12,
                  22,  58, 45,   48,  14,  0,   -3,  20,  22,  30, 41,  19,  16,
                  10,  4,  26,   21,  24,  20,  37,  24,  13,  5,  24,  24,  6,
                  15,  27, 43,   9,   -35, 0,   -9,  -22, -14, -7, -39, -21,
              },
              std::array<double, 64>{
                  -218, -95,  -60, -80, 69,  -125, -28, -154, -102, -60, 65,
                  16,   15,   60,  -1,  -7,  -67,  63,  33,   63,   95,  139,
                  77,   33,   -20, 9,   10,  50,   31,  74,   11,   11,  -24,
                  -5,   6,    3,   20,  14,  9,    -18, -34,  -19,  5,   3,
                  13,   11,   18,  -27, -43, -74,  -24, -13,  -12,  9,   -33,
                  -24,  -147, -32, -76, -50, -25,  -39, -29,  -27,
              },
              std::array<double, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   98,  161, 92,
                  152, 98,  156, 40,  -33, -26, -10, 14,  22,  72,  74,
                  18,  -29, -30, 5,   8,   25,  27,  19,  21,  -31, -45,
                  -10, -7,  12,  18,  8,   5,   -37, -41, -13, -5,  -12,
                  1,   6,   32,  -22, -52, -10, -26, -29, -20, 27,  35,
                  -33, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
      .pst_egame =
          {
              std::array<double, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<double, 64>{
                  -65, -79, -56, -47, 6,   21,  -3,  -23, -48, 0,  0,
                  -20, 3,   23,  21,  37,  -8,  0,   2,   8,   1,  27,
                  20,  5,   -15, 22,  20,  30,  25,  36,  23,  5,  -15,
                  -12, 26,  39,  44,  32,  16,  -3,  -35, -5,  13, 30,
                  34,  25,  6,   -8,  -40, -18, 6,   19,  21,  8,  -11,
                  -31, -67, -54, -31, -7,  -38, -12, -42, -70,
              },
              std::array<double, 64>{
                  -10, 35,  46,  42,  -15, -38, -2,  32,  -7, 40,  43,  72,  87,
                  28,  32,  -2,  -8,  15,  19,  69,  64,  41, 26,  -2,  28,  43,
                  37,  64,  88,  64,  89,  55,  -15, 49,  31, 63,  50,  45,  55,
                  26,  -1,  -30, 27,  14,  21,  28,  14,  25, -12, -16, -31, -9,
                  -12, -24, -23, -30, -27, -22, -14, -57, 0,  -24, -3,  -24,
              },
              std::array<double, 64>{
                  18, 10, 26, 6,  13, 28, 23, 14, 16, 19,  9,  8,   -11,
                  -2, 17, 7,  21, 17, 14, 11, 12, -3, -10, 2,  18,  14,
                  23, 9,  11, 5,  4,  18, 20, 21, 21, 16,  7,  3,   0,
                  1,  15, 14, 6,  12, 3,  -2, 0,  0,  13,  6,  9,   13,
                  2,  -2, -1, 16, 6,  14, 16, 12, 6,  4,   17, -12,
              },
              std::array<double, 64>{
                  -9,  -23, -3,  -8,  1,   -10, -10, -26, -9,  -7,  4,
                  -7,  -7,  -12, -5,  -9,  0,   -11, -3,  -6,  -5,  0,
                  2,   0,   -2,  6,   14,  6,   12,  7,   0,   0,   -3,
                  2,   14,  20,  6,   7,   -5,  -8,  -10, -2,  6,   9,
                  12,  -1,  -5,  -12, -11, -21, -8,  -2,  1,   -11, -21,
                  -29, -22, -8,  -27, -2,  -8,  -20, -1,  -15,
              },
              std::array<double, 64>{
                  -56, -49, -10, -29, -46, -29, -73, -99, -26, -10, -36,
                  -4,  -16, -37, -30, -66, -26, -31, 3,   0,   -17, -25,
                  -34, -53, -23, -1,  19,  16,  16,  0,   0,   -25, -20,
                  -9,  14,  23,  11,  15,  2,   -24, -30, -7,  -9,  9,
                  5,   -10, -28, -29, -45, -19, -15, -11, -8,  -28, -24,
                  -57, -28, -67, -26, -18, -30, -25, -65, -88,
              },
              std::array<double, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   184, 170, 154,
                  117, 139, 122, 175, 207, 27,  45,  48,  37,  26,  0,
                  40,  27,  0,   -3,  -16, -31, -24, -18, -10, -9,  -3,
                  -3,  -18, -25, -25, -22, -15, -21, -13, -10, -21, -14,
                  -13, -18, -25, -29, -1,  -11, 0,   -4,  2,   -16, -21,
                  -26, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
      .doubled_pawns_mgame =
          {
              0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   0,
              0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   -1,
              0,   -1,  -3,  -1,  -1,  0,   -7,  1,  -13, -13, -29, -6,  -6,
              -6,  -8,  -11, -20, -11, -11, -22, -6, -11, -17, 5,   -14, -17,
              -23, -21, -11, -12, 0,   0,   0,   0,  0,   0,   0,   0,
          },
      .doubled_pawns_egame =
          {
              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
              0,   0,   0,   0,   0,   1,   0,   -1,  -1,  -1,  0,   -5,  -6,
              -6,  -2,  -8,  -9,  -3,  -10, -28, -21, -34, -19, -17, -32, -26,
              -27, -31, -17, -27, -19, -14, -24, -23, -39, -45, -36, -32, -22,
              -31, -26, -34, -33, 0,   0,   0,   0,   0,   0,   0,   0,
          },
      .passed_pawns_mgame =
          {
              0,  0,  0,   0,   0,   0,  0,  0,   0,   0,   0,   0,  2,
              2,  1,  0,   47,  29,  23, 10, 1,   19,  5,   9,   15, 6,
              5,  -1, 4,   15,  0,   -1, 6,  -20, -21, -26, -19, -3, 0,
              15, -8, -14, -27, -30, -8, 7,  7,   17,  -6,  0,   2,  -11,
              -2, 9,  15,  -6,  0,   0,  0,  0,   0,   0,   0,   0,
          },
      .passed_pawns_egame =
          {
              0,  0,   0,  0,   0,  0,  0,   0,  10, 8,  8,  8,   5,
              8,  10,  12, 111, 85, 53, 32,  24, 67, 63, 92, 61,  50,
              43, 37,  26, 28,  54, 53, 22,  19, 16, 14, 14, 10,  22,
              23, -3,  -2, 1,   -1, -7, -10, 2,  -2, -9, -8, -15, -6,
              -7, -12, -7, -3,  0,  0,  0,   0,  0,  0,  0,  0,
          },
      .mobility_mgame =
          {
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
          },
      .mobility_egame =
          {
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
              std::array<double, 64>{0},
          },
  };
  return params;
}

/*
epoch:3, step:2000, metric:train_loss, value:0.0608068
epoch:3, step:2000, metric:test_loss, value:0.0620394
Score of tuned vs pretuned: 155 - 128 - 117  [0.534] 400
Score of tuned vs pretuned: 304 - 243 - 213  [0.540] 760
Score of tuned vs pretuned: 478 - 398 - 347  [0.533] 1223
Score of tuned vs pretuned: 929 - 775 - 458  [0.536] 2162
Elo difference: 24.8 +/- 13.0, LOS: 100.0 %, DrawRatio: 21.2 %
constexpr double kMultiplier = 1.0 / 75.0;
constexpr double learning_rate = 1000.0;
constexpr int batch_size = 1024;
*/
inline StdEvalParams<int> OrigParamsStep2000() {
  static constexpr StdEvalParams<int> params{
      .pv_mgame =
          {
              0,
              20000,
              992,
              455,
              339,
              330,
              78,
          },
      .pv_egame =
          {
              0,
              20000,
              688,
              373,
              224,
              208,
              78,
          },
      .pst_mgame =
          {
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  -87, 224, 194, 106,  -135, -67, 65,  50,  147, 61,  33,
                  170, 54,  61,  -24,  -167, 70,  87,  95,  13,  63,  114,
                  131, -15, -2,  -40,  16,   -36, -13, -29, 1,   -59, -57,
                  23,  -46, -94, -104, -62,  -54, -74, 42,  6,   -27, -58,
                  -58, -44, -4,  -20,  33,   25,  -2,  -56, -34, -20, 14,
                  25,  9,   47,  18,   -50,  11,  -21, 36,  33,
              },
              std::array<int, 64>{
                  -15, -9,  1,   6,   119, 144, 54,  38,  -22, -40, -9,
                  -19, -29, 51,  28,  54,  -13, -17, 2,   -2,  20,  50,
                  45,  53,  -30, -29, -20, -15, -18, -1,  -13, -9,  -8,
                  -29, -10, -14, -7,  -6,  -5,  -5,  -16, 1,   -10, -2,
                  -8,  -4,  7,   -3,  -29, -6,  7,   1,   1,   13,  -6,
                  0,   0,   -11, -8,  9,   -15, -23, -32, -60,
              },
              std::array<int, 64>{
                  38,  59,  31,  91,  82,  -17, 6,   28,  29,  24,  72,
                  76,  102, 95,  18,  44,  -12, 15,  21,  31,  15,  63,
                  83,  16,  -32, -14, -1,  17,  9,   35,  -1,  -30, -40,
                  -29, -13, -6,  -1,  -9,  8,   -29, -45, -26, -21, -24,
                  -7,  -9,  -8,  -31, -43, -17, -24, -20, -12, 0,   -9,
                  -63, -26, -15, -7,  -1,  4,   -15, -33, -28,
              },
              std::array<int, 64>{
                  -47, 5,  -97, -47, -58, -19, -13, 13,  -21, 16, -12, -21, 45,
                  51,  20, -36, -9,  42,  45,  46,  41,  65,  31, 4,   5,   15,
                  20,  46, 38,  40,  16,  6,   1,   14,  13,  26, 32,  18,  14,
                  9,   5,  18,  19,  20,  16,  27,  16,  9,   7,  21,  18,  6,
                  15,  21, 36,  14,  -28, 0,   0,   -14, -11, -1, -35, -20,
              },
              std::array<int, 64>{
                  -209, -93,  -61, -79, 68,  -123, -26, -151, -97, -54, 53,
                  14,   15,   53,  -4,  -9,  -65,  50,  26,   49,  83,  127,
                  62,   32,   -23, 6,   8,   33,   20,  52,   3,   9,   -17,
                  -6,   2,    -1,  12,  8,   6,    -13, -25,  -15, 0,   0,
                  11,   8,    9,   -13, -39, -71,  -21, -11,  -10, 6,   -26,
                  -23,  -142, -21, -63, -36, -21,  -33, -25,  -24,
              },
              std::array<int, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   90,  150, 88,
                  143, 90,  151, 34,  -36, -21, -9,  11,  18,  64,  67,
                  16,  -22, -23, 8,   9,   13,  23,  18,  11,  -25, -37,
                  -7,  -2,  9,   17,  5,   3,   -21, -30, -5,  0,   -13,
                  -5,  5,   19,  -14, -37, -8,  -16, -25, -11, 17,  25,
                  -27, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
      .pst_egame =
          {
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  -64, -75, -55, -46, 12,  19,  -9, -23, -46, 0, -3,
                  -21, 3,   16,  18,  36,  -13, -2, -4,  4,   0, 15,
                  9,   7,   -10, 17,  12,  24,  21, 26,  18,  9, -9,
                  -8,  25,  32,  36,  23,  17,  1,  -25, -8,  9, 26,
                  27,  23,  5,   -1,  -34, -14, 0,  13,  15,  6, -10,
                  -24, -55, -36, -22, 0,   -23, -8, -29, -47,
              },
              std::array<int, 64>{
                  -12, 27,  39,  35,  -29, -49, -10, 27,  -9,  32,  36,
                  63,  78,  20,  26,  -4,  -6,  12,  14,  59,  50,  31,
                  20,  -6,  25,  37,  34,  50,  73,  50,  74,  47,  -18,
                  45,  25,  49,  38,  39,  45,  22,  -3,  -26, 20,  7,
                  18,  23,  11,  23,  -12, -16, -26, -10, -14, -25, -24,
                  -31, -29, -24, -13, -40, 0,   -20, -4,  -22,
              },
              std::array<int, 64>{
                  9,   0,  18, 0,  1,  22, 17, 10, 11, 15,  5,  1,   -14,
                  -11, 13, 0,  15, 12, 11, 7,  9,  -7, -15, 3,  17,  14,
                  19,  11, 6,  1,  6,  14, 18, 18, 18, 14,  6,  6,   -3,
                  4,   12, 15, 7,  10, 3,  0,  1,  0,  13,  8,  11,  13,
                  4,   3,  2,  14, 7,  14, 14, 14, 7,  6,   16, -10,
              },
              std::array<int, 64>{
                  -12, -23, 0,   -5,  1,   -12, -12, -28, -6,  -7,  5,
                  -6,  -12, -14, -9,  -9,  -2,  -14, -8,  -10, -9,  -9,
                  0,   0,   -2,  1,   3,   4,   4,   -1,  -1,  2,   -3,
                  -2,  5,   9,   -1,  2,   -5,  -10, -7,  -7,  0,   4,
                  9,   -5,  -8,  -16, -10, -16, -9,  -4,  -3,  -12, -19,
                  -26, -15, -7,  -18, -2,  -7,  -21, -2,  -13,
              },
              std::array<int, 64>{
                  -44, -45, -11, -25, -46, -20, -68, -92, -24, -13, -38,
                  -11, -19, -37, -32, -60, -22, -32, -5,  -9,  -26, -34,
                  -34, -51, -24, -9,  2,   5,   3,   -10, -5,  -27, -22,
                  -15, 3,   7,   -1,  4,   -4,  -26, -32, -12, -12, 0,
                  -2,  -11, -27, -30, -40, -18, -16, -19, -15, -28, -25,
                  -51, -23, -57, -21, -15, -27, -24, -56, -82,
              },
              std::array<int, 64>{
                  0,   0,   0,   0,   0,  0,  0,  0,   156, 140, 130, 96,  125,
                  105, 147, 176, 15,  29, 33, 25, 16,  -3,  28,  20,  5,   2,
                  -9,  -19, -16, -14, -3, -4, 0,  -1,  -8,  -14, -12, -13, -8,
                  -12, -7,  -2,  -14, -8, -3, -9, -13, -19, 2,   -3,  3,   0,
                  5,   -13, -12, -15, 0,  0,  0,  0,   0,   0,   0,   0,
              },
          },
      .doubled_pawns_mgame =
          {
              0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   0,
              0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   -3,
              -1,  -1,  -4,  -1,  -1,  0,   -4,  1,  -13, -8,  -25, -6,  -8,
              -5,  -3,  -11, -16, -11, -12, -15, -6, -10, -13, -1,  -11, -12,
              -21, -17, -13, -9,  0,   0,   0,   0,  0,   0,   0,   0,
          },
      .doubled_pawns_egame =
          {
              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
              0,   0,   0,   -1,  0,   1,   -1,  0,   0,   -1,  0,   -4,  -11,
              -6,  -1,  -8,  -11, -4,  -12, -25, -14, -26, -16, -13, -23, -24,
              -25, -25, -11, -16, -14, -8,  -14, -17, -27, -32, -26, -22, -17,
              -25, -15, -22, -23, 0,   0,   0,   0,   0,   0,   0,   0,
          },
      .passed_pawns_mgame =
          {
              0,  0,  0,   0,   0,   0,  0,  0,   -8,  -10, -6, -11, -5,
              -2, -4, -1,  38,  23,  22, 9,  0,   18,  6,   10, 17,  9,
              10, 1,  1,   13,  0,   0,  9,  -13, -14, -18, -7, -3,  0,
              10, -6, -10, -16, -22, -3, 10, 11,  15,  -3,  4,  7,   -8,
              -4, 12, 18,  -7,  0,   0,  0,  0,   0,   0,   0,  0,
          },
      .passed_pawns_egame =
          {
              0,  0,   0,   0,  0,  0,  0,  0,  -17, -21, -15, -12, -8,
              -8, -17, -18, 79, 67, 34, 21, 16, 55,  46,  66,  43,  31,
              27, 27,  18,  21, 37, 40, 16, 15, 11,  8,   10,  9,   17,
              16, 0,   -2,  0,  0,  -2, -8, 0,  -3,  -5,  -5,  -13, -4,
              -4, -11, -3,  -2, 0,  0,  0,  0,  0,   0,   0,   0,
          },
  };
  return params;
}

#endif