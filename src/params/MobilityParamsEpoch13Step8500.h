#ifndef MobilityParamsEpoch13Step8500_h
#define MobilityParamsEpoch13Step8500_h

#include "std_eval_params.h"
#include <array>

/*
epoch:13, step:8500, metric:train_loss, value:0.0595356
epoch:13, step:8500, metric:test_loss, value:0.0598515
epoch:13, step:8500, metric:integerized_train_loss, value:0.0596281
epoch:13, step:8500, metric:integerized_test_loss, value:0.0599549
Score of OrigParamsStep41250 vs MobilityParamsEpoch13Step8500: 269 - 337 - 196  [0.458] 802
Score of OrigParamsStep41250 vs MobilityParamsEpoch13Step8500: 343 - 452 - 257  [0.448] 1052
Elo difference: -36.1 +/- 18.3, LOS: 0.0 %, DrawRatio: 24.4 %

Rank Name                          Elo     +/-   Games    Wins  Losses   Draws   Points   Score    Draw   White   Black
  1 MobilityParamsEpoch13Step8500 160      17    1376     836     244     296    984.0   71.5%   21.5%   71.6%   71.4%
  2 OrigParamsStep41250           105      17    1374     729     326     319    888.5   64.7%   23.2%   64.4%   64.9%
  3 OrigParams                     69      16    1374     668     398     308    822.0   59.8%   22.4%   60.6%   59.0%
  4 ZeroParams                   -551      38    1376      18    1283      75     55.5    4.0%    5.5%    4.7%    3.4%

Score of MobilityParamsEpoch13Step8500 vs OrigParams: 641 - 353 - 255  [0.615] 1249
Elo difference: 81.6 +/- 17.5, LOS: 100.0 %, DrawRatio: 20.4 %
*/
inline StdEvalParams<int> MobilityParamsEpoch13Step8500() {
  static constexpr StdEvalParams<int> params{
      .pv_mgame =
          {
              0,
              20000,
              1187,
              543,
              420,
              418,
              110,
          },
      .pv_egame =
          {
              0,
              20000,
              1012,
              544,
              314,
              316,
              117,
          },
      .pst_mgame =
          {
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  -87, 223, 192, 104,  -134, -65, 64,  46,  146, 61,  33,
                  170, 56,  61,  -21,  -164, 70,  87,  99,  13,  64,  117,
                  132, -12, -2,  -37,  14,   -35, -14, -24, 1,   -57, -61,
                  24,  -46, -94, -107, -65,  -60, -77, 39,  4,   -26, -63,
                  -66, -49, -3,  -24,  32,   30,  -5,  -71, -50, -19, 27,
                  36,  0,   62,  29,   -67,  14,  -27, 54,  47,
              },
              std::array<int, 64>{
                  -14, -2,  4,  10,  129, 148, 58, 43,  -24, -46, -2,  -9,  -24,
                  59,  34,  59, -15, -14, 6,   1,  32,  63,  55,  67,  -40, -31,
                  -17, -17, -9, 9,   -7,  -3,  -8, -33, -9,  -10, -5,  -1,  0,
                  0,   -17, 6,  -10, 0,   -4,  3,  14,  1,   -37, -10, 14,  2,
                  11,  18,  -4, 2,   -2,  -15, -7, 21,  -16, -31, -34, -63,
              },
              std::array<int, 64>{
                  41,  64,  32,  98,  87,  -15, 7,   29,  34,  36,  84,
                  87,  111, 104, 23,  50,  -16, 18,  23,  37,  13,  64,
                  89,  14,  -29, -12, 5,   22,  16,  44,  0,   -29, -47,
                  -32, -14, -8,  0,   -7,  9,   -29, -58, -30, -19, -23,
                  -3,  -4,  -6,  -38, -56, -18, -22, -14, -5,  5,   -10,
                  -83, -24, -22, -6,  4,   7,   -8,  -46, -28,
              },
              std::array<int, 64>{
                  -41, 4,   -100, -49, -55, -20, -11, 13,  -25, 19, -15,
                  -22, 49,  55,   25,  -48, -11, 41,  49,  48,  41, 72,
                  36,  3,   0,    12,  22,  58,  45,  48,  14,  0,  -2,
                  20,  21,  30,   41,  18,  15,  10,  3,   25,  19, 23,
                  19,  36,  23,   12,  5,   18,  24,  3,   14,  27, 40,
                  9,   -34, 0,    -6,  -20, -13, -10, -38, -20,
              },
              std::array<int, 64>{
                  -218, -95,  -60, -80, 68,  -125, -28, -154, -102, -60, 64,
                  16,   14,   59,  -1,  -7,  -67,  62,  32,   62,   94,  138,
                  76,   32,   -20, 9,   9,   49,   30,  74,   10,   11,  -25,
                  -5,   6,    3,   21,  13,  9,    -19, -35,  -19,  4,   4,
                  14,   12,   17,  -29, -42, -73,  -23, -7,   -7,   9,   -32,
                  -24,  -146, -32, -75, -49, -24,  -38, -26,  -27,
              },
              std::array<int, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   98,  161, 91,
                  151, 98,  156, 39,  -33, -26, -10, 13,  21,  72,  74,
                  18,  -29, -31, 5,   5,   22,  23,  17,  19,  -33, -46,
                  -13, -5,  9,   14,  9,   4,   -40, -38, -14, -6,  -9,
                  5,   7,   30,  -19, -49, -5,  -28, -21, -14, 28,  40,
                  -29, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
      .pst_egame =
          {
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  -65, -79, -56, -46, 6,   20,  -3,  -23, -48, 0,  0,
                  -20, 3,   23,  21,  37,  -8,  0,   2,   8,   1,  26,
                  19,  5,   -15, 21,  19,  30,  25,  36,  23,  5,  -15,
                  -11, 26,  39,  44,  33,  17,  -3,  -35, -5,  13, 30,
                  34,  25,  5,   -8,  -40, -18, 5,   19,  20,  8,  -11,
                  -31, -67, -53, -30, -6,  -35, -11, -43, -71,
              },
              std::array<int, 64>{
                  -10, 35,  46,  42,  -14, -37, -1,  32,  -6, 39,  43,  72,  87,
                  28,  32,  -1,  -7,  14,  18,  69,  64,  41, 26,  -1,  27,  43,
                  37,  63,  88,  64,  89,  55,  -15, 48,  31, 62,  50,  45,  55,
                  26,  -1,  -30, 26,  13,  20,  27,  14,  25, -12, -16, -31, -9,
                  -12, -24, -23, -29, -27, -22, -14, -56, 0,  -23, -2,  -24,
              },
              std::array<int, 64>{
                  18, 10, 26, 6,  13, 28, 23, 14, 16, 19, 9,  8,   -10,
                  -1, 17, 7,  21, 17, 14, 11, 12, -2, -9, 1,  18,  14,
                  23, 9,  11, 5,  4,  18, 20, 20, 21, 16, 6,  3,   0,
                  0,  14, 13, 5,  11, 2,  -2, 0,  0,  12, 5,  8,   13,
                  1,  -2, -1, 14, 2,  11, 14, 10, 4,  2,  14, -18,
              },
              std::array<int, 64>{
                  -8,  -22, -2,  -7,  1,   -9, -9,  -25, -8,  -6,  4,   -6,  -6,
                  -11, -5,  -8,  0,   -10, -2, -5,  -4,  0,   1,   0,   -1,  6,
                  14,  6,   12,  7,   0,   0,  -2,  2,   13,  20,  6,   7,   -5,
                  -7,  -10, -2,  4,   8,   11, -1,  -5,  -12, -10, -23, -8,  -3,
                  0,   -11, -22, -28, -21, -7, -28, -1,  -7,  -22, 0,   -14,
              },
              std::array<int, 64>{
                  -56, -48, -10, -29, -46, -29, -72, -98, -26, -10, -36,
                  -4,  -16, -37, -30, -66, -26, -31, 3,   0,   -16, -24,
                  -33, -53, -23, 0,   19,  16,  16,  0,   0,   -25, -20,
                  -9,  14,  24,  12,  15,  1,   -24, -29, -6,  -7,  10,
                  6,   -10, -28, -29, -44, -18, -14, -10, -7,  -27, -24,
                  -57, -27, -66, -25, -17, -29, -24, -64, -87,
              },
              std::array<int, 64>{
                  0,   0,   0,   0,   0,   0,   0,   0,   184, 170, 154,
                  117, 139, 122, 175, 207, 26,  44,  47,  36,  26,  0,
                  40,  26,  1,   -2,  -15, -31, -24, -17, -10, -9,  -2,
                  -3,  -17, -25, -24, -21, -15, -20, -14, -9,  -20, -14,
                  -13, -18, -24, -29, -1,  -11, 0,   -3,  2,   -15, -21,
                  -27, 0,   0,   0,   0,   0,   0,   0,   0,
              },
          },
      .doubled_pawns_mgame =
          {
              0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   0,
              0,   0,   0,   0,   0,   0,   0,   0,  0,   0,   0,   0,   -1,
              0,   -1,  -3,  -1,  -1,  0,   -7,  1,  -13, -13, -29, -6,  -6,
              -6,  -8,  -11, -20, -11, -11, -22, -6, -11, -18, 3,   -15, -17,
              -22, -22, -13, -14, 0,   0,   0,   0,  0,   0,   0,   0,
          },
      .doubled_pawns_egame =
          {
              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
              0,   0,   0,   0,   0,   1,   0,   -1,  -1,  -1,  0,   -5,  -6,
              -6,  -2,  -8,  -9,  -3,  -10, -28, -21, -34, -19, -17, -32, -26,
              -27, -31, -17, -26, -19, -14, -24, -23, -39, -45, -37, -32, -22,
              -31, -27, -35, -33, 0,   0,   0,   0,   0,   0,   0,   0,
          },
      .passed_pawns_mgame =
          {
              0,  0,  0,   0,   0,   0,  0,  0,   0,   0,   0,   0,  2,
              2,  0,  0,   47,  29,  23, 10, 1,   19,  5,   8,   14, 5,
              5,  -1, 3,   15,  0,   -1, 6,  -20, -21, -26, -19, -3, 0,
              15, -8, -14, -26, -30, -8, 7,  7,   17,  -6,  0,   2,  -11,
              -2, 9,  15,  -6,  0,   0,  0,  0,   0,   0,   0,   0,
          },
      .passed_pawns_egame =
          {
              0,  0,   0,  0,   0,  0,  0,   0,  10, 8,  8,  8,   5,
              8,  10,  12, 112, 87, 54, 33,  25, 68, 65, 93, 61,  50,
              43, 37,  26, 28,  54, 53, 23,  19, 16, 14, 14, 10,  22,
              22, -3,  -1, 1,   0,  -7, -10, 1,  -3, -9, -8, -15, -6,
              -7, -12, -7, -3,  0,  0,  0,   0,  0,  0,  0,  0,
          },
      .mobility_mgame =
          {
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 2, 1, 0,
                  2, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1,
                  1, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 1, 1, 1,
                  2, 3, 1, 2, 2, 1, 3, 4, 3, 3, 3, 0, 3, 4, 2, 3,
              },
              std::array<int, 64>{
                  0, 1, 0, 0, 0, 1, 1, 0,  2, 2, 1, 2, 2, 2, 2,  1,
                  2, 2, 2, 1, 2, 1, 2, 1,  1, 1, 2, 2, 1, 1, 2,  3,
                  3, 2, 3, 3, 4, 2, 3, 3,  4, 4, 3, 4, 4, 3, 4,  4,
                  6, 4, 4, 5, 6, 6, 5, 10, 4, 6, 5, 5, 5, 7, 10, 6,
              },
              std::array<int, 64>{
                  1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,
                  1, 1, 2, 1, 0, 1, 2, 3, 1, 2, 1, 2, 2, 0, 2, 3,
                  2, 3, 1, 2, 2, 2, 2, 1, 4, 2, 4, 2, 3, 3, 3, 4,
                  3, 7, 2, 4, 3, 3, 5, 4, 2, 4, 6, 4, 5, 6, 1, 1,
              },
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
          },
      .mobility_egame =
          {
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 1, 2, 1, 2, 2,
                  2, 2, 2, 2, 1, 1, 2, 3, 3, 2, 3, 2, 1, 2, 2, 3,
                  3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 3, 3, 2,
                  2, 2, 3, 2, 2, 3, 1, 3, 2, 2, 1, 5, 2, 2, 2, 2,
              },
              std::array<int, 64>{
                  2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3,
                  3, 2, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 2, 3,
                  3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3,
                  2, 3, 3, 2, 2, 2, 3, 2, 4, 2, 2, 1, 2, 2, 0, 4,
              },
              std::array<int, 64>{
                  1, 2, 1, 2, 2, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
                  3, 2, 1, 2, 2, 1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 2,
                  2, 1, 1, 1, 1, 1, 1, 3, 2, 3, 2, 1, 2, 1, 3, 2,
                  2, 3, 3, 2, 3, 2, 2, 2, 4, 2, 7, 3, 3, 5, 3, 4,
              },
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
              std::array<int, 64>{
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              },
          },
  };
  return params;
}

#endif